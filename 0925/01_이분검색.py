'''
    신라대학교 202395016 컴퓨터공학부 박수연

    -- BinarySearch (이분검색) --
        - 내가 찾고자 하는 데이터가 있음 -> 전체 데이터를 절반으로 쪼개서 내가 찾고자하는 부분이 없는 쪽은 잘라냄
            절반씩 잘라내서 결국 내가 찾고자하는 값과 일치시키면 데이터를 출력
'''

key = int(input("key 값을 입력하세요 : "))         # key 변수를 정수로 입력받음, 내가 찾고 싶은 값을 입력받은 후 key 변수에 저장
m_list = [5, 6, 1, 3, 9, 7, 20, 30, 11, 56]       # 변수에 리스트 값 선언, 무작위로 10개의 값을 임의로 선언함
length = len(m_list)                              # m_list 안에 있는 요소들을 셈, 10개 / 10을 변수에 담음

m_list.sort()                                     # sort, 정렬한다는 뜻, m_list 변수 안에 있는 리스트 요소들을 오름차순으로 정렬시키는 함수
left = 0                                          # 왼쪽, 하항값
right = length - 1                                # 중앙값을 기준으로 데이터를 찾음, 오른쪽, 상항값(-1을 하는 이유는 리스트는 0번째부터 시작하기 때문)

while left <= right:                              # left는 0, right는 9
    mid = (left+right)//2                         # 중앙값을 구함, mid 변수에 대입 (왼쪽 + 오른쪽 // 2)
    if m_list[mid] == key:                        # m_list의 중앙값이 내가 입력한 값과 같다면
        print(mid + 1)                            # 찾은 값을 출력하고
        break                                     # 반복을 멈춤
    elif m_list[mid] > key:                       # 위의 조건을 만족하지 않으면, 중앙값이 내가 입력한 값보다 크다면
        right = mid - 1                           # 중앙값을 -1 하고 그 값을 상항값으로 지정
    else:                                         # 위에 조건을 다 만족하지 않다면
        left = mid + 1                            # 중앙값을 +1 하고 그 값을 하항값으로 지정

if left > right:
    print("값을 찾지 못했습니다.")                  # 리스트 안에 내가 찾고자 하는 값이 없음